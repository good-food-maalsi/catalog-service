events {}

http {
    upstream notifications {
        server notifications-nginx:80 max_fails=3 fail_timeout=30s;
    }

    upstream auth {
        server auth-nginx:80 max_fails=3 fail_timeout=30s;
    }

    upstream catalog {
        server catalog-nginx:80 max_fails=3 fail_timeout=30s;
    }

    upstream commands {
        server commands-nginx:80 max_fails=3 fail_timeout=30s;
    }

    upstream delivery {
        server delivery-nginx:80 max_fails=3 fail_timeout=30s;
    }

    upstream franchise {
        server franchise-nginx:80 max_fails=3 fail_timeout=30s;
    }

    upstream data {
        server data-nginx:80 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;

        location /notifications {
            proxy_pass http://notifications;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        location /auth {
            proxy_pass http://auth;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }        
        
        location /catalog {
            proxy_pass http://catalog;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        location /commands {
            proxy_pass http://commands;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }
        
        location /delivery {
            proxy_pass http://delivery;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }
        
        location /franchise {
            proxy_pass http://franchise;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        location /data {
            proxy_pass http://data;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }
    }
}
